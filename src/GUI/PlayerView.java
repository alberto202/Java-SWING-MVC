/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.*;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author alberto
 */
public class PlayerView extends javax.swing.JPanel {
    
    Player playerModel;
    Napakalaki napakalakiModel; 
    
    /**
     * Creates new form PlayerView
     */
    public PlayerView() {           
        initComponents();
    }
    
    public void setPlayer(Object p){
        playerModel = (Player)p;
        
        // Incluir instrucciones para actualizar su nombre, nivel, etc.
        lbName.setText(playerModel.getName());
        lbLevel.setText(Integer.toString(playerModel.getLevels()));
        lbCombatLevel.setText(Integer.toString(playerModel.getCombatLevel()));
        
        cbIsDead.setSelected(false);
        if(playerModel.isDead())
            cbIsDead.setSelected(true);
        
        btStealTreasure.setEnabled(false);    
        
        cbSectario.setSelected(false);
        if(p instanceof CultistPlayer) {
            cbSectario.setSelected(true);
        }
        
        /** EXAMEN **/
        btDecrementLevelEnemy.setEnabled(playerModel.getcanIDownloadLevel());
        lbTypePlayer.setText("Tipo jugador: "+playerModel.getClass().getSimpleName());
        /** FIN EXAMEN **/
        
        lbNameEnemy.setText(playerModel.getEnemy().getName());
        lbPandingBadConsequence.setText(playerModel.getPandingBadConcequence() != null ? playerModel.getPandingBadConcequence().toString() : "");
        // A continuación se actualizan sus tesoros
        
        this.fillTreasurePanel(jPanelTreasureVisible, playerModel.getVisibleTreasures());
        this.fillTreasurePanel(jPanelHiddenTreasure, playerModel.getHiddenTreasures());
        repaint();
        revalidate();
    }
    
    public void setNapakalaki(Napakalaki game){
        napakalakiModel = game;
    }
    
    private void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) {
        // Se elimina la información antigua, si la hubiera
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y añadiendo sus vistas
        //    al panel
        for (Treasure t : aList) {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t);
            aTreasureView.setVisible (true);
            aPanel.add (aTreasureView);
        }
        // Se fuerza la actualización visual del panel
        aPanel.repaint();
        aPanel.revalidate();
    }
    
    private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
        // Se recorren los tesoros que contiene el panel, 
        //    almacenando en un vector aquellos que están seleccionados.
        //    Finalmente se devuelve dicho vector.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
        tv = (TreasureView) c;
        if ( tv.isSelected() )
           output.add ( tv.getTreasure() );
        }
        return output;
    }

    public void visibleBtMakeTreasure(boolean visible){
        btMakeTreasure.setEnabled(visible);
    }
    
    public void visibleBtStealTreasure(boolean visible){
        btStealTreasure.setEnabled(visible);
    }
    
    public void visibleBtDiscardTreasure(boolean visible){
        btDiscardTreasure.setEnabled(visible);
    }
    
    public void visibleBtDiscardAllTreasure(boolean visible){
        btDiscardAllTreasures.setEnabled(visible);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        lbLevel = new javax.swing.JLabel();
        lbCombatLevel = new javax.swing.JLabel();
        lbNameEnemy = new javax.swing.JLabel();
        cbSectario = new javax.swing.JCheckBox();
        btMakeTreasure = new javax.swing.JButton();
        btStealTreasure = new javax.swing.JButton();
        btDiscardTreasure = new javax.swing.JButton();
        btDiscardAllTreasures = new javax.swing.JButton();
        jPanelTreasureVisible = new javax.swing.JPanel();
        jPanelHiddenTreasure = new javax.swing.JPanel();
        lbPandingBadConsequence = new javax.swing.JLabel();
        lbName1 = new javax.swing.JLabel();
        lbLevel1 = new javax.swing.JLabel();
        lbCombatLevel1 = new javax.swing.JLabel();
        lbPandingBadConsequence1 = new javax.swing.JLabel();
        lbNameEnemy1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cbIsDead = new javax.swing.JCheckBox();
        btDecrementLevelEnemy = new javax.swing.JButton();
        lbTypePlayer = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));

        lbName.setText("Nombre");

        lbLevel.setText("Nivel");

        lbCombatLevel.setText("Nivel de combate");
        lbCombatLevel.setAlignmentX(0.5F);
        lbCombatLevel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lbNameEnemy.setText("Nombre Enemigo");
        lbNameEnemy.setAlignmentX(0.5F);
        lbNameEnemy.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        cbSectario.setBackground(new java.awt.Color(255, 255, 255));
        cbSectario.setSelected(true);
        cbSectario.setText("Sectario");
        cbSectario.setToolTipText("");
        cbSectario.setAlignmentX(0.5F);
        cbSectario.setAutoscrolls(true);
        cbSectario.setBorderPaintedFlat(true);
        cbSectario.setEnabled(false);
        cbSectario.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        cbSectario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSectarioActionPerformed(evt);
            }
        });

        btMakeTreasure.setBackground(new java.awt.Color(238, 241, 254));
        btMakeTreasure.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        btMakeTreasure.setForeground(new java.awt.Color(54, 63, 92));
        btMakeTreasure.setText("Hacer visible");
        btMakeTreasure.setToolTipText("");
        btMakeTreasure.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btMakeTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMakeTreasureActionPerformed(evt);
            }
        });

        btStealTreasure.setBackground(new java.awt.Color(238, 241, 254));
        btStealTreasure.setFont(new java.awt.Font("URW Bookman L", 0, 14)); // NOI18N
        btStealTreasure.setForeground(new java.awt.Color(54, 63, 92));
        btStealTreasure.setText("Robar tesoro");
        btStealTreasure.setToolTipText("");
        btStealTreasure.setBorder(null);
        btStealTreasure.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btStealTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStealTreasureActionPerformed(evt);
            }
        });

        btDiscardTreasure.setBackground(new java.awt.Color(238, 241, 254));
        btDiscardTreasure.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btDiscardTreasure.setForeground(new java.awt.Color(54, 63, 92));
        btDiscardTreasure.setText("Descartar tesoro");
        btDiscardTreasure.setToolTipText("");
        btDiscardTreasure.setBorder(null);
        btDiscardTreasure.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btDiscardTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDiscardTreasureActionPerformed(evt);
            }
        });

        btDiscardAllTreasures.setBackground(new java.awt.Color(238, 241, 254));
        btDiscardAllTreasures.setFont(new java.awt.Font("URW Bookman L", 0, 14)); // NOI18N
        btDiscardAllTreasures.setForeground(new java.awt.Color(54, 63, 92));
        btDiscardAllTreasures.setText("Descartar todos los tesoros");
        btDiscardAllTreasures.setToolTipText("");
        btDiscardAllTreasures.setBorder(null);
        btDiscardAllTreasures.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btDiscardAllTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDiscardAllTreasuresActionPerformed(evt);
            }
        });

        jPanelTreasureVisible.setBackground(new java.awt.Color(254, 254, 254));
        jPanelTreasureVisible.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(88, 253, 98)));

        jPanelHiddenTreasure.setBackground(new java.awt.Color(254, 254, 254));
        jPanelHiddenTreasure.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 46, 46)));

        lbPandingBadConsequence.setText("Mala consecuencia");
        lbPandingBadConsequence.setAlignmentX(0.5F);
        lbPandingBadConsequence.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lbName1.setText("Nombre:");

        lbLevel1.setText("Nivel:");

        lbCombatLevel1.setText("Nivel de combate:");

        lbPandingBadConsequence1.setText("Mala consecuencia:");
        lbPandingBadConsequence1.setAlignmentX(0.5F);
        lbPandingBadConsequence1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lbPandingBadConsequence1.setPreferredSize(new java.awt.Dimension(150, 14));

        lbNameEnemy1.setText("Enemigo:");
        lbNameEnemy1.setAlignmentX(0.5F);
        lbNameEnemy1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jSeparator1.setBackground(new java.awt.Color(42, 42, 42));

        cbIsDead.setBackground(new java.awt.Color(255, 255, 255));
        cbIsDead.setText("Estás muerto");
        cbIsDead.setToolTipText("");
        cbIsDead.setAlignmentX(0.5F);
        cbIsDead.setAutoscrolls(true);
        cbIsDead.setBorderPaintedFlat(true);
        cbIsDead.setEnabled(false);
        cbIsDead.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        btDecrementLevelEnemy.setBackground(new java.awt.Color(238, 241, 254));
        btDecrementLevelEnemy.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        btDecrementLevelEnemy.setText("Decrementar nivel");
        btDecrementLevelEnemy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDecrementLevelEnemyActionPerformed(evt);
            }
        });

        lbTypePlayer.setText("Tipo jugador: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbName1)
                                            .addComponent(lbLevel1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbLevel)
                                            .addComponent(lbName)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbCombatLevel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lbCombatLevel))
                                    .addComponent(lbTypePlayer))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbPandingBadConsequence1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lbPandingBadConsequence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(lbNameEnemy1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbNameEnemy))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbSectario)
                                                .addGap(41, 41, 41)
                                                .addComponent(cbIsDead)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jPanelHiddenTreasure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelTreasureVisible, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btMakeTreasure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(5, 5, 5)
                                .addComponent(btStealTreasure, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btDiscardTreasure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btDecrementLevelEnemy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btDiscardAllTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbName1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbLevel)
                            .addComponent(lbLevel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbCombatLevel1)
                            .addComponent(lbCombatLevel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSectario)
                            .addComponent(cbIsDead))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbPandingBadConsequence)
                            .addComponent(lbPandingBadConsequence1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNameEnemy1)
                            .addComponent(lbNameEnemy))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTypePlayer)
                .addGap(4, 4, 4)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btDiscardTreasure, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btStealTreasure, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btMakeTreasure, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)))
                    .addComponent(btDecrementLevelEnemy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btDiscardAllTreasures, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelTreasureVisible, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanelHiddenTreasure, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btMakeTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMakeTreasureActionPerformed
        // TODO add your handling code here:
        ArrayList<Treasure> selHidden = getSelectedTreasures (jPanelHiddenTreasure);
        napakalakiModel.makeTreasuresVisible(selHidden);
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_btMakeTreasureActionPerformed

    private void btDiscardAllTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDiscardAllTreasuresActionPerformed
        // TODO add your handling code here:
        playerModel.discardAllTreasures();
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_btDiscardAllTreasuresActionPerformed

    private void btDiscardTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDiscardTreasureActionPerformed
        // TODO add your handling code here:
        ArrayList<Treasure> selVisible = getSelectedTreasures (jPanelTreasureVisible);
        napakalakiModel.discardVisibleTreasures(selVisible);
        ArrayList<Treasure> selHidden = getSelectedTreasures (jPanelHiddenTreasure);
        napakalakiModel.discardHiddenTreasures(selHidden);
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_btDiscardTreasureActionPerformed

    private void btStealTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStealTreasureActionPerformed
        // TODO add your handling code here:
        playerModel.stealTreasure();
        setPlayer(napakalakiModel.getCurrentPlayer());
        repaint();
        revalidate();
    }//GEN-LAST:event_btStealTreasureActionPerformed

    private void cbSectarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSectarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSectarioActionPerformed

    private void btDecrementLevelEnemyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDecrementLevelEnemyActionPerformed
        // TODO add your handling code here:
        ArrayList<Treasure> quitar = null;
        if(playerModel.getcanIDownloadLevel()){
            quitar = getSelectedTreasures(jPanelHiddenTreasure);
            if(quitar.size() > 0){
                playerModel.decrementLevelEnemy(quitar);
            }
        }
        
        setPlayer(napakalakiModel.getCurrentPlayer());
        
        repaint();
        revalidate();
    }//GEN-LAST:event_btDecrementLevelEnemyActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDecrementLevelEnemy;
    private javax.swing.JButton btDiscardAllTreasures;
    private javax.swing.JButton btDiscardTreasure;
    private javax.swing.JButton btMakeTreasure;
    private javax.swing.JButton btStealTreasure;
    private javax.swing.JCheckBox cbIsDead;
    private javax.swing.JCheckBox cbSectario;
    private javax.swing.JPanel jPanelHiddenTreasure;
    private javax.swing.JPanel jPanelTreasureVisible;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbCombatLevel;
    private javax.swing.JLabel lbCombatLevel1;
    private javax.swing.JLabel lbLevel;
    private javax.swing.JLabel lbLevel1;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbName1;
    private javax.swing.JLabel lbNameEnemy;
    private javax.swing.JLabel lbNameEnemy1;
    private javax.swing.JLabel lbPandingBadConsequence;
    private javax.swing.JLabel lbPandingBadConsequence1;
    private javax.swing.JLabel lbTypePlayer;
    // End of variables declaration//GEN-END:variables
}
